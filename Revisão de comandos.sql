# CRIAR O BANCO
CREATE DATABASE DB_BIBLIOTECA;
# LISTAR OS BANCOS QUE TEM NO SERVIDOR
SHOW DATABASES;
# DEPOIS DE CRIAR O BANCO
# PRECISA SELECIONAR ELE PARA SER USADO
USE NOME_BANCO
# VERIFICAR QUAL O BANCO QUE ESTÁ SENDO USADO 
# NO MOMENTO
SELECT
	DATABASE()
	# EXCLUIR O BANCO QUE FOI CRIADO
DROP DATABASE NOME_BANCO;
# CRIANDO TABELAS COM CONSTRAINTS
CREATE TABLE TBL_LIVRO(
	ID_LIVRO SMALLINT AUTO_INCREMENT PRIMARY KEY,
	NOME_LIVRO VARCHAR(50) NOT NULL,
	ISBN VARHCAR(30) NOT NULL,
	ID_AUTOR SMALLINT NOT NULL,
	PRECO_LIVRO DECIMAL NOT NULL
);
# EXIBE AS TABELAS QUE FORAM CRIADAS
SHOW TABLES;

CREATE TABLE TBL_AUTORES(
	ID_AUTOR SMALLINT PRIMARY KEY,
	NOME_AUTOR VARCHAR(60),
	SOBRENOME_AUTOR VARCHAR(60)
);

CREATE TABLE TBL_EDITORAS(
	ID_EDITORA SMALLINT PRIMARY KEY AUTO_INCREMENT,
	NOME_EDITORA VARCHAR(50) NOT NULL
);
# TABELA DE TESTE PARA VER O AUTO_INCREMENT
CREATE TABLE TBL_INCREMENTO(
	CODIGO SMALLINT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(20) NOT NULL
) AUTO_INCREMENT = 15;
# INSERINDO OS DADOS NA TEBELA
# TEM QUE INSERIR NA ORDEM EM QUE OS CAMPOS
# SÃO CRIADOS

INSERT
	INTO
	TBL_INCREMENTO (NOME)
VALUES ("ANA")
INSERT
	INTO
	TBL_INCREMENTO (NOME)
VALUES ("MARIA")
INSERT
	INTO
	TBL_INCREMENTO (NOME)
VALUES ("JULIA")
INSERT
	INTO
	TBL_INCREMENTO (NOME)
VALUES ("JOANA")
# FAZENDO A CONSULTA NA TABELA COM OS CAMPOS QUE FORAM
# INSERIDOS

SELECT
	*
FROM
	TBL_INCREMENTO;
# SABER O VALOR DO ÚLTMO REGISTRO DO AUTO_INCREMENTO
SELECT
	MAX(CODIGO)
FROM
	TBL_INCREMENTO;
# ALTERANDO O VALOR DEFINIDO ANTERIORMENTE NO AUTO_INCREMENT
ALTER TABLE TBL_INCREMENTO
AUTO_INCREMENT = 90;

/*
 * TIPOS DE DADOS
 * 
 * TIPOS DE DADOS PARA NÚMEROS INTEIROS:
 * INT
 * TINYINT
 * SMALLTINT
 * MEDIUMINT
 * BIGINT
 * 
 * TIPOS DE DADOS PARA NÚMEROS DECIMAIS:
 * DECIMAL E FLOAT
 * 
 * TIPOS DE DADOS PARA STRINGS:
 * VARCHAR -> PARA PALAVRAS OU TEXTOS
 * CHAR -> PARA STRINGS ÚNICAS
 * MEDIUMTEXT
 * LONGTEXT
 * 
 * TIPOS DE DADOS PARA VALORES BOOLEANOS:
 * BOOL/BOOLEAN VALEM 0 E 1
 * 
 * TIPOS DE DADOS PARA IMAGENS, MÚSICAS OU ARQUIVOS GRANDE:
 * BLOB
 * MEDIUMBLOB
 * TINYBLOB
 * 
 * TIPOS DE DADOS PARA VALORES DE DATA:
 * DATE
 * DATETIME
 * TIME
 * YEAR
 * */
# ALTERAR VALORES DE TABELAS
# SINTAXE
ALTER TABLE NOME_TABEL
DROP COLUMN NOME_COLUNA

ALTER TABLE TBL_LIVRO
DROP COLUMN ID_AUTOR;
# PODE EXCLUIR UMA CHAVE PRIMARIA
ALTER TABLE NOME_TABLE
DROP PRIMARY KEY;
# ADICIONAR NOVAMENTE A COLUNA QUE FOI APAGADA, JUNTAMENTE
# COM ALGUMAS CONSTRAINTS
ALTER TABLE TBL_LIVRO
ADD ID_AUTOR SMALLINT NOT NULL;

ALTER TABLE TBL_LIVRO
ADD CONSTRAINT FK_ID_AUTOR
FOREIGN KEY (ID_AUTOR)
REFERENCES TBL_AUTORES(ID_AUTOR);
# PODE ALTERAR O TIPO DE DADO DE UMA COLUNA
ALTER TABLE TBL_LIVRO
ALTER COLUMN ID_AUTOR SMALLINT;
# PODE ADICIONAR CHAVE PRIMARIAS EM COLUNAS
# QUE AINDA NÃO TEM UMA CHAVE PRIMARIA DEFINIDA
ALTER TABLE CLIENTES
ADD PRIMARY KEY(ID_CLIENTE);
# INSERT EM TABELAS
# SINTAXE
INSERT
	INTO
	TABELA(COLUNA1, COLUNA2)
VALUES (VALOR1,
VALOR2);
# insert na tabela de autores
INSERT
	INTO
	TBL_AUTORES(ID_AUTOR,
NOME_AUTOR, SOBRENOME_AUTOR)
VALUES (2,
"GERALD",
"CARTER");

INSERT
	INTO
	TBL_AUTORES(ID_AUTOR,
NOME_AUTOR, SOBRENOME_AUTOR)
VALUES(3, "MARK", 
"SOBEL")

INSERT
	INTO
	TBL_AUTORES(ID_AUTOR,
NOME_AUTOR, SOBRENOME_AUTOR)
VALUES(4, "William", 
"Stanek")

INSERT
	INTO
	TBL_AUTORES(ID_AUTOR,
NOME_AUTOR, SOBRENOME_AUTOR)
VALUES(5, "Richard", 
"Blum")


SELECT
	*
FROM
	TBL_AUTORES;
# insert na tabela de editoras
INSERT
	INTO
	TBL_EDITORAS(NOME_EDITORA)
VALUES("PRENTICE HALL");

INSERT
	INTO
	TBL_EDITORAS(NOME_EDITORA)
VALUES("o REILY");

INSERT
	INTO
	TBL_EDITORAS(NOME_EDITORA)
VALUES("WILEY");

SELECT
	*
FROM
	TBL_EDITORAS;
# insert na tabela de livros
INSERT
	INTO	
	TBL_LIVRO(NOME_LIVRO, ISBN, DATA_PUB, PRECO_LIVRO, ID_AUTOR, ID_EDITORA)
VALUES("LINUX COMMAND LINE AND SHELL SCRIPTING", 123455555, "20000001111", 68.65, 4, 5)

INSERT
	INTO	
	TBL_LIVRO(NOME_LIVRO, ISBN, DATA_PUB, PRECO_LIVRO, ID_AUTOR, ID_EDITORA)
VALUES("LINUX COMMAND LINE AND SHELL SCRIPTING", 123455555, "20000001111", 68.65, 4, 5)

INSERT
	INTO	
	TBL_LIVRO(NOME_LIVRO, ISBN, DATA_PUB, PRECO_LIVRO, ID_AUTOR, ID_EDITORA)
VALUES("LINUX COMMAND LINE AND SHELL SCRIPTING", 123455555, "20000001111", 68.65, 4, 5)
# realizar consultas simples com select
select
	nome_autor
from
	tbl autores;

select
	*
from
	tbl_autores;

select
	nome_livro
from
	tbl_livro
	# especificando quais colunas queremos ver
select
	nome_livro,
	id_autor
from
		tbl_livro
